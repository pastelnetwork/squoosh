define("./static/c/sw-bridge-9df86372.js",["require","exports","./idb-keyval-9d9b390d"],(function(e,t,a){async function i(e){if(e.waiting)return;const t=await async function(e){return e.installing?e.installing:new Promise(t=>{e.addEventListener("updatefound",()=>t(e.installing),{once:!0})})}(e);return new Promise(e=>{t.addEventListener("statechange",()=>{"installed"===t.state&&e()})})}t.getSharedImage=function(){return new Promise(e=>{const t=a=>{"load-image"===a.data.action&&(e(a.data.file),navigator.serviceWorker.removeEventListener("message",t))};navigator.serviceWorker.addEventListener("message",t),navigator.serviceWorker.controller.postMessage("share-ready")})},t.mainAppLoaded=async function(){if(await a.get("user-interacted"))return;a.set("user-interacted",!0);const e=await async function(){const e=await navigator.serviceWorker.getRegistration();return e?e.active||e.waiting||e.installing:null}();e&&e.postMessage("cache-all")},t.offliner=async function(e){navigator.serviceWorker.register("/serviceworker.js");const t=!!navigator.serviceWorker.controller;if(navigator.serviceWorker.addEventListener("controllerchange",async()=>{t?location.reload():e("Ready to work offline",{timeout:5e3})}),!t)return;const a=await navigator.serviceWorker.getRegistration();if(!a)return;await i(a),"reload"===await e("Update available",{actions:["reload","dismiss"]})&&async function(){const e=await navigator.serviceWorker.getRegistration();e&&e.waiting&&e.waiting.postMessage("skip-waiting")}()}}));
